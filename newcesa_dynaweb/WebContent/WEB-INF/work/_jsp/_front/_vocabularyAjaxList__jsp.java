/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._front;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.io.*;
import java.sql.*;
import java.util.*;
import java.util.Date;
import java.text.*;
import javax.naming.*;
import net.sf.json.*;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.util.Map.Entry;
import com.cesa.common.*;
import com.cesa.dao.*;
import com.cesa.util.*;
import com.cesa.db.*;
import org.apache.log4j.Logger;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.math.NumberUtils;
import org.apache.commons.codec.digest.DigestUtils;

public class _vocabularyAjaxList__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      

	//Cache \uc5c6\uc74c
	response.setDateHeader("Expires", -1);
	response.setHeader("Pragma","no-cache");
	response.setHeader("Cache-Control","no-store"); //HTTP 1.0
	response.setHeader("Cache-Control","no-cashe"); //HTTP 1.1

	request.setCharacterEncoding("utf-8");

	String remoteAddr =request.getRemoteAddr();

	//\uc138\uc158 timeout \uc124\uc815
	//session.setMaxInactiveInterval(3600);

	//log
	Logger log = Logger.getLogger(this.getClass());

	String useBrowser = request.getHeader("User-Agent");
	if(useBrowser==null) useBrowser = "";

	// SiteContext getting
	SiteContext sc = SiteContext.getInstance();
	
	//admin
	boolean isAdminLogin = false;
	String adminID = "";
	String sPermission = "";
	String sGroup = "";
	
	//front
	boolean isFrontLogin = false;
	String sMemberId = "";
	String sMemberSeq = "";
	String sProjectSeq = "";
	

	if(	session.getAttribute("adminID") != null ){
		isAdminLogin = true;
		adminID = (String)session.getAttribute("adminID");
		sGroup = (String)session.getAttribute("sGroup");
	}
	else {
		isAdminLogin = false;
	}

	if(	session.getAttribute("sMemberId") != null ){
		isFrontLogin = true;
		sMemberId = (String)session.getAttribute("sMemberId");
		sMemberSeq = (String)session.getAttribute("sMemberSeq");
		sProjectSeq = (String)session.getAttribute("sProjectSeq");
	}
	else {
		isFrontLogin = false;
	}


	try{

      out.write('\n');
      
	

	String activityIndex = StringUtils.defaultString(request.getParameter("activityIndex"));
	String activityName = StringUtils.defaultString(request.getParameter("activityName"));
	String isEnd = StringUtils.defaultString(request.getParameter("isEnd"));

	
	//log.debug("activityIndex : "+activityIndex);
	//log.debug("activityName : "+activityName);
	//log.debug("isEnd : "+isEnd);
	
	RowSetMapper cRowSet = null;

	List arrData = new ArrayList();

	StringBuffer sbufTable = new StringBuffer();

	int count = 0;
	int rowCount = 0;
	int colCount = 0;
	int totalCount = 0;
	
	String btnImage = "";
	int checkTempData = 0;

	String etcWord = "";
	int etcCheck = 0;

	try{
		if(isEnd.equals("Y")){
			sbufTable.append("<div style=\"padding-bottom:50px;padding-top:80px;text-align:center\"><img src=\"/img/front/end_img.png\" width=\"40%\" /></div>");
			sbufTable.append("<div style=\"padding-bottom:50px;text-align:center\"></div>");
		}
		else{
			

			cRowSet = MemberDAO.getInstance().getMemberCheckValueDetail(sMemberId, activityName, sProjectSeq);
			while(cRowSet.next()){

				if(cRowSet.getString("add_yn").equals("Y")){
					etcWord = cRowSet.getString("word");
					etcCheck = cRowSet.getInt("check_value");
				}
				else{
					arrData.add(count, cRowSet.getInt("check_value"));
					count++;
				}
			}
			count = 0;

			cRowSet = ProjectDAO.getInstance().projectActivityWordFrontList(sProjectSeq, activityIndex);

			totalCount = cRowSet.size();

			while(cRowSet.next()){
				colCount = 1;
				rowCount++;
				
				if(totalCount/2 < rowCount){
					btnImage = "g";
				}
				else{
					btnImage = "b";
				}
				
				if(arrData.size()>0){
					checkTempData = (Integer)arrData.get(rowCount-1);
				}
				else{
					checkTempData = 0;
				}
				
				sbufTable.append("<input type=\"hidden\" id=\"checked_"+rowCount+"\" name=\"checked_"+rowCount+"\" value=\""+checkTempData+"\" /> \n");
				sbufTable.append("<input type=\"hidden\" id=\"word\" name=\"word\" value=\""+cRowSet.getString("word")+"\" /> \n");
				sbufTable.append("<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"wordTable\"> \n");
				sbufTable.append("<colgroup><col width=\"4%\"/><col width=\"92%\"/><col width=\"4%\"/></colgroup> \n");
				sbufTable.append("<tr> \n");
				sbufTable.append("	<td></td> \n");
				sbufTable.append("	<td valign=\"top\"> \n");
				sbufTable.append("		<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\"> \n");
				sbufTable.append("			<colgroup> \n");
				sbufTable.append("				<col width=\"18%\"/><col width=\"3%\"/><col /><col width=\"3%\"/><col /><col width=\"3%\"/><col /><col width=\"3%\"/><col /><col width=\"3%\"/><col /><col width=\"3%\"/> \n");
				sbufTable.append("			</colgroup> \n");
				sbufTable.append("			<tr> \n");
				sbufTable.append("				<td class=\"td_bold\">"+cRowSet.getString("word")+"</td> \n");


				for(int i=1;i<=5;i++){
					sbufTable.append("				<td><img src=\"/img/front/18_blank.png\" width=\"9\" /></td> \n");
					sbufTable.append("				<td valign=\"middle\" style=\"text-align:center;\"> \n");			
					
				
					if(checkTempData==i){
						sbufTable.append("					<img id=\"div"+(colCount)+"_"+rowCount+"\" class=\"img\" src=\"/img/front/"+btnImage+"_0"+i+"_check.png\" onclick=\"checkValue('"+(colCount++)+"_"+rowCount+"')\"/> \n");
					}
					else{
						sbufTable.append("					<img id=\"div"+(colCount)+"_"+rowCount+"\" class=\"img\" src=\"/img/front/"+btnImage+"_0"+i+".png\" onclick=\"checkValue('"+(colCount++)+"_"+rowCount+"')\"/> \n");
					}


					sbufTable.append("				</td> \n");
				}

				sbufTable.append("				<td><img src=\"/img/front/18_blank.png\" width=\"9\" /></td> \n");
				sbufTable.append("			</tr> \n");
				sbufTable.append("		</table> \n");
				sbufTable.append("	</td> \n");
				sbufTable.append("	<td></td> \n");
				sbufTable.append("</tr> \n");
				sbufTable.append("</table> \n");
			}
			
			rowCount++;
			colCount = 1;
			//log.debug("last rowCount : "+rowCount);
			//log.debug("last colCount : "+colCount);

			
			//log.debug("etcWord : "+etcWord);
			//log.debug("etcCheck : "+etcCheck);


			sbufTable.append("<div id=\"etcBtnDiv\" style=\"display:"+(StringUtils.isEmpty(etcWord) ? "block" : "none" )+";padding-top:10px;\"> \n");

			

			sbufTable.append("<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\"> \n");
			sbufTable.append("<colgroup><col width=\"2%\"/><col width=\"92%\"/><col width=\"6%\"/></colgroup> \n");
			sbufTable.append("<tr> \n");
			sbufTable.append("	<td></td> \n");
			sbufTable.append("	<td valign=\"top\" align=\"left\"> \n");
			sbufTable.append("	<img src=\"/img/front/etc_btn.png\" onclick=\"inputEtc()\" width=\"20%\" /> \n");
			sbufTable.append("	</td> \n");
			sbufTable.append("	<td></td> \n");
			sbufTable.append("</tr> \n");
			sbufTable.append("</table> \n");


			sbufTable.append("</div> \n");

			sbufTable.append("<div id=\"etcInputDiv\" style=\"display:"+(StringUtils.isEmpty(etcWord) ? "none" : "block" )+"\"> \n");
			sbufTable.append("<input type=\"hidden\" id=\"checked_"+rowCount+"\" name=\"checked_"+rowCount+"\" value=\""+etcCheck+"\" /> \n");
			sbufTable.append("<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"wordTable\"> \n");
			sbufTable.append("<colgroup><col width=\"4%\"/><col width=\"92%\"/><col width=\"4%\"/></colgroup> \n");
			sbufTable.append("<tr> \n");
			sbufTable.append("	<td></td> \n");
			sbufTable.append("	<td valign=\"top\"> \n");
			sbufTable.append("		<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\"> \n");
			sbufTable.append("			<colgroup> \n");
			sbufTable.append("				<col width=\"18%\"/><col width=\"3%\"/><col /><col width=\"3%\"/><col /><col width=\"3%\"/><col /><col width=\"3%\"/><col /><col width=\"3%\"/><col /><col width=\"3%\"/> \n");
			sbufTable.append("			</colgroup> \n");
			sbufTable.append("			<tr> \n");
			sbufTable.append("				<td class=\"td_bold\"><input type=\"text\" name=\"add_word\" value=\""+etcWord+"\" style=\"height:25px;width:45px;\"/></td> \n");


			for(int i=1;i<=5;i++){
				sbufTable.append("				<td><img src=\"/img/front/18_blank.png\" width=\"9\" /></td> \n");
				sbufTable.append("				<td valign=\"middle\" style=\"text-align:center;\"> \n");
				if(etcCheck == i){
					sbufTable.append("					<img id=\"div"+(colCount)+"_"+rowCount+"\" class=\"img\" src=\"/img/front/y_0"+i+"_check.png\" onclick=\"checkValue('"+(colCount++)+"_"+rowCount+"')\"/> \n");
					sbufTable.append("				</td> \n");
				}
				else{
					sbufTable.append("					<img id=\"div"+(colCount)+"_"+rowCount+"\" class=\"img\" src=\"/img/front/y_0"+i+".png\" onclick=\"checkValue('"+(colCount++)+"_"+rowCount+"')\"/> \n");
					sbufTable.append("				</td> \n");
				}
			}


			sbufTable.append("				<td><img src=\"/img/front/18_blank.png\" width=\"9\" /></td> \n");
			sbufTable.append("			</tr> \n");
			sbufTable.append("		</table> \n");
			sbufTable.append("	</td> \n");
			sbufTable.append("	<td></td> \n");
			sbufTable.append("</tr> \n");
			sbufTable.append("</table> \n");
			sbufTable.append("</div> \n");
			
			sbufTable.append("<input type=\"hidden\" id=\"valueCount\" name=\"valueCount\" value=\""+totalCount+"\" /> \n");
		}

	}
	catch(Exception e){
		log.debug("Exception:"+e);
	}

	out.println(sbufTable.toString());



      
	}
	catch(Exception e){
		log.fatal(e.getMessage(), e);
	}
	finally{
	}

      out.write(_jsp_string0, 0, _jsp_string0.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("front/vocabularyAjaxList.jsp"), -3712738199595540837L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("include/header.jsp"), 7226424049310249664L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("include/footer.jsp"), -7402735715276527379L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  static {
    _jsp_string0 = "\n\r\n".toCharArray();
  }
}
