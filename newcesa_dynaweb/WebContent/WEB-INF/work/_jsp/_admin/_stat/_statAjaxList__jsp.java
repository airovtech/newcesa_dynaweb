/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._admin._stat;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.io.*;
import java.sql.*;
import java.util.*;
import java.util.Date;
import java.text.*;
import javax.naming.*;
import net.sf.json.*;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.util.Map.Entry;
import com.cesa.common.*;
import com.cesa.dao.*;
import com.cesa.util.*;
import com.cesa.db.*;
import org.apache.log4j.Logger;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.math.NumberUtils;
import org.apache.commons.codec.digest.DigestUtils;

public class _statAjaxList__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      
	/*============================================================================
	 * @ Description : \u00ea\u00b4\u0080\u00eb\u00a6\u00ac\u00ec\u009e\u0090 \u00ea\u00b4\u0080\u00eb\u00a6\u00ac \u00ed\u0094\u0084\u00eb\u00a1\u009c\u00ec\u0084\u00b8\u00ec\u008a\u00a4
	 *
	 * \u00ec\u009e\u0091\u00ec\u0084\u00b1\u00ec\u009d\u00bc : 2011.04.18
	 * \u00ec\u009e\u0091\u00ec\u0084\u00b1\u00ec\u009e\u0090 : \u00ec\u009d\u00b4\u00ec\u00a0\u0095\u00ec\u0088\u009c
	 ============================================================================*/

      out.write(_jsp_string0, 0, _jsp_string0.length);
      

	//Cache \uc5c6\uc74c
	response.setDateHeader("Expires", -1);
	response.setHeader("Pragma","no-cache");
	response.setHeader("Cache-Control","no-store"); //HTTP 1.0
	response.setHeader("Cache-Control","no-cashe"); //HTTP 1.1

	request.setCharacterEncoding("utf-8");

	String remoteAddr =request.getRemoteAddr();

	//\uc138\uc158 timeout \uc124\uc815
	//session.setMaxInactiveInterval(3600);

	//log
	Logger log = Logger.getLogger(this.getClass());

	String useBrowser = request.getHeader("User-Agent");
	if(useBrowser==null) useBrowser = "";

	// SiteContext getting
	SiteContext sc = SiteContext.getInstance();
	
	//admin
	boolean isAdminLogin = false;
	String adminID = "";
	String sPermission = "";
	String sGroup = "";
	
	//front
	boolean isFrontLogin = false;
	String sMemberId = "";
	String sMemberSeq = "";
	String sProjectSeq = "";
	

	if(	session.getAttribute("adminID") != null ){
		isAdminLogin = true;
		adminID = (String)session.getAttribute("adminID");
		sGroup = (String)session.getAttribute("sGroup");
	}
	else {
		isAdminLogin = false;
	}

	if(	session.getAttribute("sMemberId") != null ){
		isFrontLogin = true;
		sMemberId = (String)session.getAttribute("sMemberId");
		sMemberSeq = (String)session.getAttribute("sMemberSeq");
		sProjectSeq = (String)session.getAttribute("sProjectSeq");
	}
	else {
		isFrontLogin = false;
	}


	try{

      out.write(_jsp_string1, 0, _jsp_string1.length);
      
	/*============================================================================
	 * @ Description : \ub85c\uadf8\uc778\uc774 \ud544\uc694\ud55c \ud398\uc774\uc9c0\uc5d0 include \ud55c\ub2e4. (\uad00\ub9ac\uc790\uc6a9)
	 *
	 * \uc791\uc131\uc77c : 2010.12.16
	 * \uc791\uc131\uc790 : \uc6b0\uc9c4\ud638
	 ============================================================================*/

      out.write(_jsp_string0, 0, _jsp_string0.length);
      

	if( !isAdminLogin ){
		//ju.alertAndRedirect("Need Login", "/admin/login/login.jsp");
		out.println("<script language='javascript'>");
		out.println("alert(\"Need Login\");");
		out.println("self.location.replace('/admin/login/login.jsp');");
		out.println("</script>");
		return;
	}


      out.write(_jsp_string2, 0, _jsp_string2.length);
      
	// Param
	String projectSeq = StringUtils.defaultString(request.getParameter("projectSeq"));	
	String userList = StringUtils.defaultString(request.getParameter("userList"));
	String type = StringUtils.defaultString(request.getParameter("type"));

	//log.debug("userList : "+userList);
	String [] userLists = userList.split(",");

	

	ArrayList arrUserList = new ArrayList();
	for(int i=0;i<userLists.length;i++){
		log.debug("userLists : "+userLists[i]);
		arrUserList.add(userLists[i]);
	}

	//log.debug("size : "+arrUserList.size());


	JSONObject json = new JSONObject();
	JSONObject wordJson = new JSONObject();
	JSONArray items = new JSONArray();
	JSONArray jaPoint = new JSONArray();
	JSONArray chartList = new JSONArray();


	//log.debug("count : "+userLists.length);
	//log.debug("type : "+type);

	int userCount = userLists.length;
	int point = 0;
	int maxPoint = 0;
	float avg = 0.0f;
	DecimalFormat exFormat = new DecimalFormat("#.#"); 

	RowSetMapper cRowSet = null;


	ArrayList arrCheckedData = new ArrayList();

	ArrayList arrActivityData = new ArrayList();
	ArrayList arrWordData = new ArrayList();
	ArrayList arrPointData = new ArrayList();

	//\uccb4\ud06c \ub9ac\uc2a4\ud2b8\ub97c \uac00\uc838\uc628\ub2e4.
	cRowSet = ProjectDAO.getInstance().projectActivityWordList(projectSeq);
	while(cRowSet.next()){
		arrCheckedData.add(cRowSet.getString("checked_activity")+"_"+cRowSet.getString("checked_word"));
	}

	
	StringBuffer sbufTable = new StringBuffer();
	StringBuffer sbufEtcTable = new StringBuffer();
	StringBuffer sbufJsonData = new StringBuffer();
	int tempRow = 0;
	int tempCol = 0;
	int arrPointCount = 0;
	boolean bEtcData = false;
	try {
	
		cRowSet = ProjectDAO.getInstance().projectActivityList(projectSeq);

		sbufTable.append("<div style='font-weight:bold;padding-top:10px;padding-bottom:5px;'>\ucc38\uc5ec\uc778\uc6d0 : "+userCount+"\uba85 ("+(type.equals("sum") ? "\ud569\uacc4": "\ud3c9\uade0" )+")&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
		sbufTable.append("<input type=\"button\" onclick=\"changeChart('line');\" value=\"\ub77c\uc778 \uadf8\ub798\ud504\" class=\"button white\" style=\"width:80px;\" />&nbsp;&nbsp;");
		sbufTable.append("<input type=\"button\" onclick=\"changeChart('column');\" value=\"\ub9c9\ub300 \uadf8\ub798\ud504\" class=\"button white\" style=\"width:80px;\" />&nbsp;&nbsp;");
		sbufTable.append("<input type=\"button\" onclick=\"goDownload();\" value=\"\uc5d1\uc140 \ub2e4\uc6b4\ub85c\ub4dc\" class=\"button black\" style=\"width:100px;\" />");
		sbufTable.append("</div>");

		//sbufTable.append("<div class=\"btn_group_right_align\" style=\"pading-top:10px;\">");
		//sbufTable.append("</div>");

		sbufTable.append("<table cellspacing=\"0\" cellpadding=\"0\" id=\"resultTable\" class=\"propertiesTable\"> \n");
		sbufTable.append("<tr> \n");
		sbufTable.append("<th>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th> \n");


		//activity
		while(cRowSet.next()){
			arrActivityData.add(tempCol, cRowSet.getString("activity"));
			sbufTable.append("<th>"+cRowSet.getString("activity")+"</th> \n");

			

			tempCol++;
		}
		sbufTable.append("</tr> \n");
		

		
		cRowSet = ProjectDAO.getInstance().projectWordList(projectSeq);

		//word \ubc0f point
		while(cRowSet.next()){

			sbufTable.append("<tr> \n");
			sbufTable.append("<td>"+cRowSet.getString("word")+"</td> \n");
			arrWordData.add(tempRow, cRowSet.getString("word"));

			tempRow++;
			for(int i=1;i<=tempCol;i++){
				if(arrCheckedData.contains(i+"_"+tempRow)){
					//\uc810\uc218\ub97c \uac00\uc838\uc628\ub2e4.
					point = MemberDAO.getInstance().getMemberCheckedStatPoint(projectSeq, userList,(String)arrActivityData.get((i-1)), cRowSet.getString("word"));
					
					if(type.equals("sum")){
						sbufTable.append("<td>"+point+"</td> \n");
						arrPointData.add(arrPointCount, point);

						if(point>=maxPoint){
							maxPoint = point;
						}
					}
					else{
						avg = (float)point/userCount;
						sbufTable.append("<td>"+exFormat.format(avg)+"</td> \n");
						arrPointData.add(arrPointCount, exFormat.format(avg));
					}
					
					arrPointCount++;
				}
				else{
					sbufTable.append("<td>-</td> \n");
					arrPointData.add(arrPointCount, 0);
					arrPointCount++;
				}
				
			}
			sbufTable.append("</tr> \n");
			

		}

		//\uae30\ud0c0\ub97c \ub9ac\uc2a4\ud2b8\ub97c \uac00\uc838\uc628\ub2e4.
		sbufTable.append("<tr> \n");
		sbufTable.append("<td>\uae30\ud0c0</td> \n");

		sbufEtcTable.append("<div style='font-weight:bold;padding-top:10px;padding-bottom:5px;'>\uae30\ud0c0 \uc5b4\ud718</div>");
		sbufEtcTable.append("<table cellspacing=\"0\" cellpadding=\"0\" id=\"resultTable\" class=\"propertiesTable\"> \n");
		sbufEtcTable.append("<tr> \n");
		sbufEtcTable.append("<th>\ucc38\uac00\uc790</th> \n");
		sbufEtcTable.append("<th>Activity</th> \n");
		sbufEtcTable.append("<th>\uc5b4\ud718</th> \n");
		sbufEtcTable.append("<th>\ud3c9\uac00\uc810\uc218</th> \n");
		sbufEtcTable.append("</tr> \n");


		for(int i=1;i<=tempCol;i++){
			point = 0;
			cRowSet = MemberDAO.getInstance().getMemberCheckedEtcStatPoint(projectSeq, (String)arrActivityData.get((i-1)));

			while(cRowSet.next()){
				if(arrUserList.contains(cRowSet.getString("memberid"))){
					//sbufEtcTable.append(cRowSet.getString("memberid")+" - "+(String)arrActivityData.get((i-1))+" - "+cRowSet.getString("word")+ "-"+cRowSet.getString("check_value")+"</br>");
					sbufEtcTable.append("<tr> \n");
					sbufEtcTable.append("<td>"+cRowSet.getString("memberid")+"</td> \n");
					sbufEtcTable.append("<td>"+cRowSet.getString("activity")+"</td> \n");
					sbufEtcTable.append("<td>"+cRowSet.getString("word")+"</td> \n");
					sbufEtcTable.append("<td>"+cRowSet.getString("check_value")+"</td> \n");
					sbufEtcTable.append("</tr> \n");
					
					point += cRowSet.getInt("check_value");
					bEtcData = true;
				}
			}
			
			log.debug("point : "+point);
			if(point>=maxPoint){
				maxPoint = point;
			}

			if(type.equals("sum")){
				sbufTable.append("<td>"+point+"</td> \n");
				arrPointData.add(arrPointCount, point);
			}
			else{


				avg = (float)point/userCount;
				sbufTable.append("<td>"+exFormat.format(avg)+"</td> \n");
				arrPointData.add(arrPointCount, exFormat.format(avg));
			}
			arrPointCount++;
			
		}

		sbufTable.append("</tr> \n");
		sbufTable.append("</table> \n");

		sbufEtcTable.append("</table> \n");


		
		arrPointCount = 0;
		for(int i=0;i<arrWordData.size();i++){
			
			wordJson = new JSONObject();
			jaPoint = new JSONArray();

			items = new JSONArray();
			items.add("Activity");
			items.add(arrWordData.get(i));
			jaPoint.add(items);

			//log.debug("================================================");
			for(int j=0;j<arrActivityData.size();j++){

				items = new JSONArray();
				items.add(arrActivityData.get(j));

				if(type.equals("sum")){
					items.add(arrPointData.get(arrPointCount));
				}
				else{
					items.add(Float.parseFloat(""+arrPointData.get(arrPointCount)));
				}
				
				arrPointCount++;
				jaPoint.add(items);
			}

			wordJson.put("title", arrWordData.get(i));
			wordJson.put("data",jaPoint);
			
			chartList.add(wordJson);

		}

		//\uae30\ud0c0 \ucd94\uac00
		wordJson = new JSONObject();
		jaPoint = new JSONArray();

		items = new JSONArray();
		items.add("Activity");
		items.add("\uae30\ud0c0");
		jaPoint.add(items);

		//log.debug("================================================");
		for(int j=0;j<arrActivityData.size();j++){

			items = new JSONArray();
			items.add(arrActivityData.get(j));

			if(type.equals("sum")){
				items.add(arrPointData.get(arrPointCount));
			}
			else{
				items.add(Float.parseFloat(""+arrPointData.get(arrPointCount)));
			}
			
			arrPointCount++;
			jaPoint.add(items);
		}

		wordJson.put("title", "\uae30\ud0c0");
		wordJson.put("data", jaPoint);
		
		chartList.add(wordJson);

	}           
	catch(Exception e){
		log.debug("admin register Exception:"+e);
	} 

	//out.println(sbufTable);
	json.put("html", sbufTable.toString());

	json.put("maxPoint", maxPoint);
	if(bEtcData){
		json.put("htmlEtc", sbufEtcTable.toString());
	}
	else{
		json.put("htmlEtc", "");
	}


	json.put("chartData", chartList);


	//log.debug(json);
	out.println(json);


      out.write(_jsp_string3, 0, _jsp_string3.length);
      
	}
	catch(Exception e){
		log.fatal(e.getMessage(), e);
	}
	finally{
	}

      out.write(_jsp_string1, 0, _jsp_string1.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("admin/stat/statAjaxList.jsp"), 6578244661479551083L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("include/header.jsp"), 7226424049310249664L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("include/needAdminLogin.jsp"), 1666710369671085L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("include/footer.jsp"), -7402735715276527379L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string2;
  private final static char []_jsp_string1;
  private final static char []_jsp_string3;
  private final static char []_jsp_string0;
  static {
    _jsp_string2 = "\r\n\r\n\r\n".toCharArray();
    _jsp_string1 = "\n\r\n".toCharArray();
    _jsp_string3 = "\r\n".toCharArray();
    _jsp_string0 = "\r\n\r\n".toCharArray();
  }
}
