/*
 * JSP generated by Resin-3.1.9 (built Mon, 13 Apr 2009 11:09:12 PDT)
 */

package _jsp._admin._vocabulary;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.io.*;
import java.sql.*;
import java.util.*;
import java.util.Date;
import java.text.*;
import javax.naming.*;
import net.sf.json.*;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.util.Map.Entry;
import com.cesa.common.*;
import com.cesa.dao.*;
import com.cesa.util.*;
import com.cesa.db.*;
import org.apache.log4j.Logger;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.math.NumberUtils;
import org.apache.commons.codec.digest.DigestUtils;

public class _vocabularyAjaxList__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      

	//Cache \uc5c6\uc74c
	response.setDateHeader("Expires", -1);
	response.setHeader("Pragma","no-cache");
	response.setHeader("Cache-Control","no-store"); //HTTP 1.0
	response.setHeader("Cache-Control","no-cashe"); //HTTP 1.1

	request.setCharacterEncoding("utf-8");

	String remoteAddr =request.getRemoteAddr();

	//\uc138\uc158 timeout \uc124\uc815
	//session.setMaxInactiveInterval(3600);

	//log
	Logger log = Logger.getLogger(this.getClass());

	String useBrowser = request.getHeader("User-Agent");
	if(useBrowser==null) useBrowser = "";

	// SiteContext getting
	SiteContext sc = SiteContext.getInstance();
	
	//admin
	boolean isAdminLogin = false;
	String adminID = "";
	String sPermission = "";
	String sGroup = "";
	
	//front
	boolean isFrontLogin = false;
	String sMemberId = "";
	String sMemberSeq = "";
	String sProjectSeq = "";
	

	if(	session.getAttribute("adminID") != null ){
		isAdminLogin = true;
		adminID = (String)session.getAttribute("adminID");
		sGroup = (String)session.getAttribute("sGroup");
	}
	else {
		isAdminLogin = false;
	}

	if(	session.getAttribute("sMemberId") != null ){
		isFrontLogin = true;
		sMemberId = (String)session.getAttribute("sMemberId");
		sMemberSeq = (String)session.getAttribute("sMemberSeq");
		sProjectSeq = (String)session.getAttribute("sProjectSeq");
	}
	else {
		isFrontLogin = false;
	}


	try{

      out.write('\n');
      
	/*============================================================================
	 * @ Description : \ub85c\uadf8\uc778\uc774 \ud544\uc694\ud55c \ud398\uc774\uc9c0\uc5d0 include \ud55c\ub2e4. (\uad00\ub9ac\uc790\uc6a9)
	 *
	 * \uc791\uc131\uc77c : 2010.12.16
	 * \uc791\uc131\uc790 : \uc6b0\uc9c4\ud638
	 ============================================================================*/

      out.write(_jsp_string0, 0, _jsp_string0.length);
      

	if( !isAdminLogin ){
		//ju.alertAndRedirect("Need Login", "/admin/login/login.jsp");
		out.println("<script language='javascript'>");
		out.println("alert(\"Need Login\");");
		out.println("self.location.replace('/admin/login/login.jsp');");
		out.println("</script>");
		return;
	}


      out.write(_jsp_string0, 0, _jsp_string0.length);
      
	
	String groupSeq = StringUtils.defaultString(request.getParameter("groupSeq"));
	String seq = StringUtils.defaultString(request.getParameter("seq"));

	RowSetMapper cRowSet = null;
	
	//groupSeq =  "9";

	log.debug("groupSeq : "+groupSeq);
	log.debug("seq : "+seq);
	ArrayList arrData = new ArrayList();

	StringBuffer sbufTableChecked = new StringBuffer();
	StringBuffer sbufTable = new StringBuffer();
	int count = 0;

	try{

		cRowSet = VocabularyDAO.getInstance().getGroupSubList(seq);

		while(cRowSet.next()){
			arrData.add(cRowSet.getString("vocabulary_seq"));
		}

		//\uc5b4\ud718 \uac00\uc838\uc624\uae30
		cRowSet = VocabularyDAO.getInstance().getVocabularyList(groupSeq);
		sbufTableChecked.append("<div style='padding-top:20px;padding-bottom:10px;font-weight:bold'>\uc120\ud0dd\ub41c \uc5b4\ud718</div>");
		sbufTableChecked.append("<table cellspacing='0' cellpadding='0' class='layerTable'>");
		sbufTableChecked.append("<colgroup>");
		sbufTableChecked.append("<col width='100px' />");
		sbufTableChecked.append("<col width='300px'/>");
		sbufTableChecked.append("<col width='100px'/>");
		sbufTableChecked.append("<col width='300px'/>");
		sbufTableChecked.append("</colgroup>");
		sbufTableChecked.append("<thead>");
		sbufTableChecked.append("<tr>");
		sbufTableChecked.append("<th>No.</th>");
		sbufTableChecked.append("<th>\uacbd\ud5d8\uc5b4\ud718</th>");
		sbufTableChecked.append("<th>No.</th>");
		sbufTableChecked.append("<th>\uacbd\ud5d8\uc5b4\ud718</th>");
		sbufTableChecked.append("</tr>");
		sbufTableChecked.append("</thead>");
		sbufTableChecked.append("<tbody>");
		while(cRowSet.next()){

			if(arrData.contains(cRowSet.getString("seq"))){
			
				count++;
				if(count%2==1){
					sbufTableChecked.append("<tr> \n");
				}
				
				sbufTableChecked.append("<td>"+count+"</td> \n");
				sbufTableChecked.append("<td><input type='checkbox' name='checkValue' value='"+cRowSet.getString("word")+"' style='vertical-align:-2px' "+(arrData.contains(cRowSet.getString("seq")) ? "checked" : "" )+"> "+cRowSet.getString("word")+"</td> \n");

				if(count%2==0){
					sbufTableChecked.append("</tr> \n");
				}
			}
		}
		
		if(count==0){
			if("0".equals(groupSeq)){
				sbufTableChecked.append("<tr><td colspan='4'>\uadf8\ub8f9\uc744 \uc120\ud0dd\ud558\uc138\uc694.</td></tr>");
			}
			else{
				sbufTableChecked.append("<tr><td colspan='4'>\ub4f1\ub85d\ub41c \uc5b4\ud718\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.</td></tr>");
			}
		}
		else{
			if(count%2==1){
				sbufTableChecked.append("<td>&nbsp;</td> \n");
				sbufTableChecked.append("<td>&nbsp;</td> \n");
				sbufTableChecked.append("</tr> \n");
			}
		}
		sbufTableChecked.append("</tbody>");
		sbufTableChecked.append("</table>");




		count=0;
		cRowSet.beforeFirst();
		sbufTableChecked.append("<div style='padding-top:20px;padding-bottom:10px;font-weight:bold'>\ucd94\uac00 \uc5b4\ud718</div>");
		sbufTable.append("<table cellspacing='0' cellpadding='0' class='layerTable'>");
		sbufTable.append("<colgroup>");
		sbufTable.append("<col width='100px' />");
		sbufTable.append("<col width='300px'/>");
		sbufTable.append("<col width='100px'/>");
		sbufTable.append("<col width='300px'/>");
		sbufTable.append("</colgroup>");
		sbufTable.append("<thead>");
		sbufTable.append("<tr>");
		sbufTable.append("<th>No.</th>");
		sbufTable.append("<th>\uacbd\ud5d8\uc5b4\ud718</th>");
		sbufTable.append("<th>No.</th>");
		sbufTable.append("<th>\uacbd\ud5d8\uc5b4\ud718</th>");
		sbufTable.append("</tr>");
		sbufTable.append("</thead>");
		sbufTable.append("<tbody>");

		while(cRowSet.next()){
			if(!arrData.contains(cRowSet.getString("seq"))){	
				count++;
				if(count%2==1){
					sbufTable.append("<tr> \n");
				}
				
				sbufTable.append("<td>"+count+"</td> \n");
				sbufTable.append("<td><input type='checkbox' name='checkValue' value='"+cRowSet.getString("word")+"' style='vertical-align:-2px' "+(arrData.contains(cRowSet.getString("seq")) ? "checked" : "" )+"> "+cRowSet.getString("word")+"</td> \n");

				if(count%2==0){
					sbufTable.append("</tr> \n");
				}
			}
		}
		
		if(count==0){
			if("0".equals(groupSeq)){
				sbufTable.append("<tr><td colspan='4'>\uadf8\ub8f9\uc744 \uc120\ud0dd\ud558\uc138\uc694.</td></tr>");
			}
			else{
				sbufTable.append("<tr><td colspan='4'>\ub4f1\ub85d\ub41c \uc5b4\ud718\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.</td></tr>");
			}
		}
		else{
			if(count%2==1){
				sbufTable.append("<td>&nbsp;</td> \n");
				sbufTable.append("<td>&nbsp;</td> \n");
				sbufTable.append("</tr> \n");
			}
		}
		sbufTable.append("</tbody>");
		sbufTable.append("</table>");

		sbufTable.append("<div style='padding-top:20px;padding-bottom:10px;text-align:center;font-weight:bold'><input type='button' onclick='goWordCheck();' value='\uacbd\ud5d8\uc5b4\ud718 \uc120\ud0dd' class='button blue' style='width:145px;' /> <input type='button' onclick='layerClose();' value='\ub2eb\uae30' class='button white' style='width:65px;' /></div>");

	}
	catch(Exception e){
		log.debug("Exception:"+e);
	}
	out.println(sbufTableChecked.toString());
	out.println(sbufTable.toString());

      
	}
	catch(Exception e){
		log.fatal(e.getMessage(), e);
	}
	finally{
	}

      out.write(_jsp_string1, 0, _jsp_string1.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5783496155892875126L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("admin/vocabulary/vocabularyAjaxList.jsp"), -5861165139057746051L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("include/header.jsp"), 7226424049310249664L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("include/needAdminLogin.jsp"), 1666710369671085L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("include/footer.jsp"), -7402735715276527379L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string0;
  static {
    _jsp_string1 = "\n\r\n".toCharArray();
    _jsp_string0 = "\r\n\r\n".toCharArray();
  }
}
